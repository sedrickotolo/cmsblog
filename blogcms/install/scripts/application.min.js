function init() {
    $('[data-toggle="tooltip"]').tooltip();
    licenseHandler();
    configHandler();
    btnHandler();
}

function configHandler() {
    $('#config-form').bootstrapValidator({
        fields: {
            'db-host': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    }
                }
            },
            'db-name': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    }
                }
            },
            'db-user': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    }
                }
            },
            'site-title': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    stringLength: {
                        max: 255,
                        message: '255 characters maximum'
                    }
                }
            },
            'site-description': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    stringLength: {
                        max: 160,
                        message: '160 characters max'
                    }
                }
            },
            'notification-email': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    emailAddress: {
                        message: 'Please enter a valid email address'
                    }
                }
            },
            'login': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    stringLength: {
                        max: 255,
                        message: '255 characters maximum'
                    }
                }
            },
            'name': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    stringLength: {
                        max: 255,
                        message: '255 characters maximum'
                    }
                }
            },
            'email': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    emailAddress: {
                        message: 'Please enter a valid email address'
                    }
                }
            },
            'password': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    identical: {
                        field: 'password',
                        message: 'Password mismatch'
                    },
                    stringLength: {
                        min: 6,
                        message: '6 characters minimum'
                    }
                }
            },
            'confirm-password': {
                validators: {
                    notEmpty: {
                        message: 'Cannot be empty'
                    },
                    identical: {
                        field: 'password',
                        message: 'Password mismatch'
                    },
                    stringLength: {
                        min: 6,
                        message: '6 characters minimum'
                    }
                }
            }
        }
    }).on('success.form.bv', function(e){
        e.preventDefault ? e.preventDefault() : (e.returnValue=false);
        $.post('/install/ajax', $(e.target).serialize() + '&action=install', function (data) {
            if (data == 'ok') {
                location.reload();
            } else {
                bootbox.alert("<span class='text-danger'>Error! Check the data!</span>");
            }
        });
    });
}

function licenseHandler() {
    $(document).on('change', '#license', function () {
        if ($(this).is(':checked')) {
            $('.license-btn-next').prop("disabled", false);
        } else {
            $('.license-btn-next').prop("disabled", true);
        }
    });
}

function btnHandler() {
    $(document).on('click', '.license-btn-next', function () {
        $.post('/install/ajax', {action: 'accept-license'}, function (data) {
            if (data == 'ok') {
                location.reload();
            }
        });
    });

    $(document).on('click', '.system-btn-next', function () {
        $.post('/install/ajax', {action: 'accept-system'}, function (data) {
            if (data == 'ok') {
                location.reload();
            }
        });
    });

    $(document).on('click', '.files-btn-next', function () {
        $.post('/install/ajax', {action: 'accept-files'}, function (data) {
            if (data == 'ok') {
                location.reload();
            }
        });
    });

    $(document).on('click', '.btn-test-connect', function () {
        var formData = $('#config-form').serialize();
        formData += '&action=check-db-config';
        $.post('/install/ajax', formData, function (data) {
            if (data == 'ok') {
                bootbox.alert("<span class='text-success'>Connection to the database <b>" + $('#db-name').val() + "</b> established!</span>");
            } else {
                $('#config-form').submit();
                bootbox.alert("<span class='text-danger'>Error connecting to database!</span>");
            }
        });
    });
}